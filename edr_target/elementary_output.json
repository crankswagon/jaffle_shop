{"creation_time": "2024-11-12T01:43:07+00:00", "days_back": 7, "models": {"model.jaffle_shop.customers": {"name": "customers", "unique_id": "model.jaffle_shop.customers", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "This table has basic information about a customer, as well as some derived facts based on a customer's orders", "full_path": "models/mart/core/customers.sql", "meta": {}, "materialization": "table", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "customers", "patch_path": "jaffle_shop://models/mart/core/schema.yml", "model_name": "customers", "normalized_full_path": "jaffle_shop/models/mart/core/customers.sql", "fqn": "hive_metastore.dbt_demo.customers", "artifact_type": "model"}, "model.jaffle_shop.orders": {"name": "orders", "unique_id": "model.jaffle_shop.orders", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "This table has basic information about orders, as well as some derived facts based on payments", "full_path": "models/mart/core/orders.sql", "meta": {}, "materialization": "table", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "patch_path": "jaffle_shop://models/mart/core/schema.yml", "model_name": "orders", "normalized_full_path": "jaffle_shop/models/mart/core/orders.sql", "fqn": "hive_metastore.dbt_demo.orders", "artifact_type": "model"}, "model.jaffle_shop.stg_customers": {"name": "stg_customers", "unique_id": "model.jaffle_shop.stg_customers", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "", "full_path": "models/staging/stg_customers.sql", "meta": {}, "materialization": "view", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_customers", "patch_path": "jaffle_shop://models/staging/schema.yml", "model_name": "stg_customers", "normalized_full_path": "jaffle_shop/models/staging/stg_customers.sql", "fqn": "hive_metastore.dbt_demo.stg_customers", "artifact_type": "model"}, "model.jaffle_shop.stg_orders": {"name": "stg_orders", "unique_id": "model.jaffle_shop.stg_orders", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "", "full_path": "models/staging/stg_orders.sql", "meta": {}, "materialization": "view", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_orders", "patch_path": "jaffle_shop://models/staging/schema.yml", "model_name": "stg_orders", "normalized_full_path": "jaffle_shop/models/staging/stg_orders.sql", "fqn": "hive_metastore.dbt_demo.stg_orders", "artifact_type": "model"}, "model.jaffle_shop.stg_payments": {"name": "stg_payments", "unique_id": "model.jaffle_shop.stg_payments", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "", "full_path": "models/staging/stg_payments.sql", "meta": {}, "materialization": "view", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_payments", "patch_path": "jaffle_shop://models/staging/schema.yml", "model_name": "stg_payments", "normalized_full_path": "jaffle_shop/models/staging/stg_payments.sql", "fqn": "hive_metastore.dbt_demo.stg_payments", "artifact_type": "model"}, "source.jaffle_shop.dbt_demo.raw_customers": {"name": "raw_customers", "unique_id": "source.jaffle_shop.dbt_demo.raw_customers", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "raw customer data", "full_path": "models/raw/src_jaffle_shop.yml", "meta": {}, "materialization": null, "source_name": "dbt_demo", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "raw_customers", "model_name": "raw_customers", "normalized_full_path": "jaffle_shop/sources/raw/src_jaffle_shop.yml", "fqn": "hive_metastore.dbt_demo.raw_customers", "artifact_type": "source"}, "source.jaffle_shop.dbt_demo.raw_orders": {"name": "raw_orders", "unique_id": "source.jaffle_shop.dbt_demo.raw_orders", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "", "full_path": "models/raw/src_jaffle_shop.yml", "meta": {}, "materialization": null, "source_name": "dbt_demo", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "raw_orders", "model_name": "raw_orders", "normalized_full_path": "jaffle_shop/sources/raw/src_jaffle_shop.yml", "fqn": "hive_metastore.dbt_demo.raw_orders", "artifact_type": "source"}, "source.jaffle_shop.dbt_demo.raw_payments": {"name": "raw_payments", "unique_id": "source.jaffle_shop.dbt_demo.raw_payments", "owners": [], "tags": [], "package_name": "jaffle_shop", "description": "check source freshness, modify the etl_loaded_ts column in raw_payments to play around with this", "full_path": "models/raw/src_jaffle_shop.yml", "meta": {}, "materialization": null, "source_name": "dbt_demo", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "raw_payments", "model_name": "raw_payments", "normalized_full_path": "jaffle_shop/sources/raw/src_jaffle_shop.yml", "fqn": "hive_metastore.dbt_demo.raw_payments", "artifact_type": "source"}}, "groups": {"dbt": {"jaffle_shop": {"models": {"mart": {"core": {"__files__": [{"node_id": "model.jaffle_shop.customers", "resource_type": "model"}, {"node_id": "model.jaffle_shop.orders", "resource_type": "model"}]}}, "staging": {"__files__": [{"node_id": "model.jaffle_shop.stg_customers", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_orders", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_payments", "resource_type": "model"}]}}, "sources": {"raw": {"__files__": [{"node_id": "source.jaffle_shop.dbt_demo.raw_customers", "resource_type": "source"}, {"node_id": "source.jaffle_shop.dbt_demo.raw_orders", "resource_type": "source"}, {"node_id": "source.jaffle_shop.dbt_demo.raw_payments", "resource_type": "source"}]}}, "tests": {"__files__": [{"node_id": "test.jaffle_shop.warning_found_michaels", "resource_type": "test"}]}}}, "tags": {"No tags": [{"node_id": "model.jaffle_shop.customers", "resource_type": "model"}, {"node_id": "model.jaffle_shop.orders", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_customers", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_orders", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_payments", "resource_type": "model"}, {"node_id": "source.jaffle_shop.dbt_demo.raw_customers", "resource_type": "source"}, {"node_id": "source.jaffle_shop.dbt_demo.raw_orders", "resource_type": "source"}, {"node_id": "source.jaffle_shop.dbt_demo.raw_payments", "resource_type": "source"}, {"node_id": "test.jaffle_shop.warning_found_michaels", "resource_type": "test"}]}, "owners": {"No owners": [{"node_id": "model.jaffle_shop.customers", "resource_type": "model"}, {"node_id": "model.jaffle_shop.orders", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_customers", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_orders", "resource_type": "model"}, {"node_id": "model.jaffle_shop.stg_payments", "resource_type": "model"}, {"node_id": "source.jaffle_shop.dbt_demo.raw_customers", "resource_type": "source"}, {"node_id": "source.jaffle_shop.dbt_demo.raw_orders", "resource_type": "source"}, {"node_id": "source.jaffle_shop.dbt_demo.raw_payments", "resource_type": "source"}, {"node_id": "test.jaffle_shop.warning_found_michaels", "resource_type": "test"}]}}, "invocation": {"invocation_id": null, "detected_at": null, "command": null, "selected": null, "full_refresh": null, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}, "test_results": {"source.jaffle_shop.dbt_demo.raw_customers": [{"metadata": {"test_unique_id": "test.jaffle_shop.source_not_null_dbt_demo_raw_customers_id.221e98cf02", "elementary_unique_id": "test.jaffle_shop.source_not_null_dbt_demo_raw_customers_id.221e98cf02.id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "raw_customers", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/raw/src_jaffle_shop.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "source.jaffle_shop.dbt_demo.raw_customers", "table_unique_id": "hive_metastore.dbt_demo.raw_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom `hive_metastore`.`dbt_demo`.`raw_customers`\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom `hive_metastore`.`dbt_demo`.`raw_customers`\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_customers')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/raw/src_jaffle_shop.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.source_unique_dbt_demo_raw_customers_id.930627b974", "elementary_unique_id": "test.jaffle_shop.source_unique_dbt_demo_raw_customers_id.930627b974.id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "raw_customers", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/raw/src_jaffle_shop.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "source.jaffle_shop.dbt_demo.raw_customers", "table_unique_id": "hive_metastore.dbt_demo.raw_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`raw_customers`\n    where id is not null\n    group by id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT id)  WITHIN GROUP (ORDER BY id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test source_unique_dbt_demo_raw_customers_id (models/raw/src_jaffle_shop.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/raw/src_jaffle_shop.yml/source_unique_dbt_demo_raw_customers_id.sql", "result_query": "with validation_errors as (\n    select\n        id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`raw_customers`\n    where id is not null\n    group by id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT id)  WITHIN GROUP (ORDER BY id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_customers')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/raw/src_jaffle_shop.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": "Database Error in test source_unique_dbt_demo_raw_customers_id (models/raw/src_jaffle_shop.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/raw/src_jaffle_shop.yml/source_unique_dbt_demo_raw_customers_id.sql", "failed_rows_count": 42000}}], "model.jaffle_shop.customers": [{"metadata": {"test_unique_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d", "elementary_unique_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d.customer_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "customers", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.customers", "table_unique_id": "hive_metastore.dbt_demo.customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom `hive_metastore`.`dbt_demo`.`customers`\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom `hive_metastore`.`dbt_demo`.`customers`\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('customers')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1", "elementary_unique_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1.customer_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "customers", "column_name": "customer_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "model.jaffle_shop.customers", "table_unique_id": "hive_metastore.dbt_demo.customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        customer_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`customers`\n    where customer_id is not null\n    group by customer_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT customer_id)  WITHIN GROUP (ORDER BY customer_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test unique_customers_customer_id (models/mart/core/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/mart/core/schema.yml/unique_customers_customer_id.sql", "result_query": "with validation_errors as (\n    select\n        customer_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`customers`\n    where customer_id is not null\n    group by customer_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT customer_id)  WITHIN GROUP (ORDER BY customer_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('customers')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": "Database Error in test unique_customers_customer_id (models/mart/core/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/mart/core/schema.yml/unique_customers_customer_id.sql", "failed_rows_count": 42000}}], "source.jaffle_shop.dbt_demo.raw_orders": [{"metadata": {"test_unique_id": "test.jaffle_shop.source_not_null_dbt_demo_raw_orders_id.6d913e721c", "elementary_unique_id": "test.jaffle_shop.source_not_null_dbt_demo_raw_orders_id.6d913e721c.id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "raw_orders", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/raw/src_jaffle_shop.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "source.jaffle_shop.dbt_demo.raw_orders", "table_unique_id": "hive_metastore.dbt_demo.raw_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom `hive_metastore`.`dbt_demo`.`raw_orders`\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom `hive_metastore`.`dbt_demo`.`raw_orders`\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/raw/src_jaffle_shop.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.source_unique_dbt_demo_raw_orders_id.e2b712e628", "elementary_unique_id": "test.jaffle_shop.source_unique_dbt_demo_raw_orders_id.e2b712e628.id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "raw_orders", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/raw/src_jaffle_shop.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "source.jaffle_shop.dbt_demo.raw_orders", "table_unique_id": "hive_metastore.dbt_demo.raw_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`raw_orders`\n    where id is not null\n    group by id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT id)  WITHIN GROUP (ORDER BY id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test source_unique_dbt_demo_raw_orders_id (models/raw/src_jaffle_shop.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/raw/src_jaffle_shop.yml/source_unique_dbt_demo_raw_orders_id.sql", "result_query": "with validation_errors as (\n    select\n        id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`raw_orders`\n    where id is not null\n    group by id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT id)  WITHIN GROUP (ORDER BY id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/raw/src_jaffle_shop.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": "Database Error in test source_unique_dbt_demo_raw_orders_id (models/raw/src_jaffle_shop.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/raw/src_jaffle_shop.yml/source_unique_dbt_demo_raw_orders_id.sql", "failed_rows_count": 42000}}], "test.jaffle_shop.warning_found_michaels": [{"metadata": {"test_unique_id": "test.jaffle_shop.warning_found_michaels", "elementary_unique_id": "test.jaffle_shop.warning_found_michaels.None.singular", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_customers", "column_name": null, "test_name": "warning_found_michaels", "test_display_name": "Warning Found Michaels", "original_path": "tests/warning_found_michaels.sql", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "warn", "model_unique_id": "model.jaffle_shop.stg_customers", "table_unique_id": "hive_metastore.dbt_demo.stg_customers", "test_type": "dbt_test", "test_sub_type": "singular", "test_query": "-- alert a test warning when we see Michaels\n\n \n\nselect \n* \nfrom `hive_metastore`.`dbt_demo`.`stg_customers`\nwhere first_name = 'Michael'", "test_params": {}, "test_created_at": null, "description": null, "result": {"result_description": "Got 2 results, configured to warn if != 0", "result_query": "-- alert a test warning when we see Michaels\n\n \n\nselect \n* \nfrom `hive_metastore`.`dbt_demo`.`stg_customers`\nwhere first_name = 'Michael'"}, "configuration": {"test_name": "warning_found_michaels", "test_params": {}}, "test_tags": [], "normalized_full_path": "jaffle_shop/tests/warning_found_michaels.sql"}, "test_results": {"display_name": "warning_found_michaels", "results_sample": [], "error_message": "Got 2 results, configured to warn if != 0", "failed_rows_count": 2}}], "model.jaffle_shop.orders": [{"metadata": {"test_unique_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3", "elementary_unique_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3.status.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "status", "test_name": "accepted_values", "test_display_name": "Accepted Values", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `hive_metastore`.`dbt_demo`.`orders`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned'\n)", "test_params": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `hive_metastore`.`dbt_demo`.`orders`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_results": {"display_name": "accepted_values", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_amount.106140f9fd", "elementary_unique_id": "test.jaffle_shop.not_null_orders_amount.106140f9fd.amount.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "amount", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere amount is null", "test_params": {"column_name": "amount", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "amount", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49", "elementary_unique_id": "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49.bank_transfer_amount.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "bank_transfer_amount", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select bank_transfer_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere bank_transfer_amount is null", "test_params": {"column_name": "bank_transfer_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select bank_transfer_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere bank_transfer_amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "bank_transfer_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625", "elementary_unique_id": "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625.coupon_amount.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "coupon_amount", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select coupon_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere coupon_amount is null", "test_params": {"column_name": "coupon_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select coupon_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere coupon_amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "coupon_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59", "elementary_unique_id": "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59.credit_card_amount.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "credit_card_amount", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select credit_card_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere credit_card_amount is null", "test_params": {"column_name": "credit_card_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select credit_card_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere credit_card_amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "credit_card_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_customer_id.c5f02694af", "elementary_unique_id": "test.jaffle_shop.not_null_orders_customer_id.c5f02694af.customer_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a", "elementary_unique_id": "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a.gift_card_amount.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "gift_card_amount", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select gift_card_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere gift_card_amount is null", "test_params": {"column_name": "gift_card_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select gift_card_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere gift_card_amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "gift_card_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_order_id.cf6c17daed", "elementary_unique_id": "test.jaffle_shop.not_null_orders_order_id.cf6c17daed.order_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "order_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select order_id\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere order_id is null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select order_id\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere order_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2", "elementary_unique_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2.customer_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "customer_id", "test_name": "relationships", "test_display_name": "Relationships", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select customer_id as from_field\n    from `hive_metastore`.`dbt_demo`.`orders`\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from `hive_metastore`.`dbt_demo`.`customers`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('customers')", "field": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select customer_id as from_field\n    from `hive_metastore`.`dbt_demo`.`orders`\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from `hive_metastore`.`dbt_demo`.`customers`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('customers')", "field": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_results": {"display_name": "relationships", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.unique_orders_order_id__10.aee5446173", "elementary_unique_id": "test.jaffle_shop.unique_orders_order_id__10.aee5446173.order_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "order_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        order_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`orders`\n    where order_id is not null\n    group by order_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT order_id)  WITHIN GROUP (ORDER BY order_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 10", "test_params": {"error_threshold": 10, "column_name": "order_id", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test unique_orders_order_id__10 (models/mart/core/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/mart/core/schema.yml/unique_orders_order_id__10.sql", "result_query": "with validation_errors as (\n    select\n        order_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`orders`\n    where order_id is not null\n    group by order_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT order_id)  WITHIN GROUP (ORDER BY order_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 10"}, "configuration": {"test_name": "unique", "test_params": {"error_threshold": 10, "column_name": "order_id", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": "Database Error in test unique_orders_order_id__10 (models/mart/core/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/mart/core/schema.yml/unique_orders_order_id__10.sql", "failed_rows_count": 10}}], "model.jaffle_shop.stg_orders": [{"metadata": {"test_unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned__return_rejected.6d0cca5204", "elementary_unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned__return_rejected.6d0cca5204.status.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_orders", "column_name": "status", "test_name": "accepted_values", "test_display_name": "Accepted Values", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "hive_metastore.dbt_demo.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `hive_metastore`.`dbt_demo`.`stg_orders`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned','return_rejected'\n)", "test_params": {"values": ["placed", "shipped", "completed", "return_pending", "returned", "return_rejected"], "column_name": "status", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `hive_metastore`.`dbt_demo`.`stg_orders`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned','return_rejected'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["placed", "shipped", "completed", "return_pending", "returned", "return_rejected"], "column_name": "status", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_results": {"display_name": "accepted_values", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64", "elementary_unique_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64.order_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_orders", "column_name": "order_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "hive_metastore.dbt_demo.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select order_id\nfrom `hive_metastore`.`dbt_demo`.`stg_orders`\nwhere order_id is null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select order_id\nfrom `hive_metastore`.`dbt_demo`.`stg_orders`\nwhere order_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a", "elementary_unique_id": "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a.order_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_orders", "column_name": "order_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "hive_metastore.dbt_demo.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        order_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`stg_orders`\n    where order_id is not null\n    group by order_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT order_id)  WITHIN GROUP (ORDER BY order_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test unique_stg_orders_order_id (models/staging/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/staging/schema.yml/unique_stg_orders_order_id.sql", "result_query": "with validation_errors as (\n    select\n        order_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`stg_orders`\n    where order_id is not null\n    group by order_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT order_id)  WITHIN GROUP (ORDER BY order_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": "Database Error in test unique_stg_orders_order_id (models/staging/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/staging/schema.yml/unique_stg_orders_order_id.sql", "failed_rows_count": 42000}}], "model.jaffle_shop.stg_customers": [{"metadata": {"test_unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa", "elementary_unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa.customer_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_customers", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_customers", "table_unique_id": "hive_metastore.dbt_demo.stg_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom `hive_metastore`.`dbt_demo`.`stg_customers`\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom `hive_metastore`.`dbt_demo`.`stg_customers`\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customers')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada", "elementary_unique_id": "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada.customer_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_customers", "column_name": "customer_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "model.jaffle_shop.stg_customers", "table_unique_id": "hive_metastore.dbt_demo.stg_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        customer_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`stg_customers`\n    where customer_id is not null\n    group by customer_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT customer_id)  WITHIN GROUP (ORDER BY customer_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test unique_stg_customers_customer_id (models/staging/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/staging/schema.yml/unique_stg_customers_customer_id.sql", "result_query": "with validation_errors as (\n    select\n        customer_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`stg_customers`\n    where customer_id is not null\n    group by customer_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT customer_id)  WITHIN GROUP (ORDER BY customer_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customers')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": "Database Error in test unique_stg_customers_customer_id (models/staging/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/staging/schema.yml/unique_stg_customers_customer_id.sql", "failed_rows_count": 42000}}, {"metadata": {"test_unique_id": "test.jaffle_shop.warning_found_michaels", "elementary_unique_id": "test.jaffle_shop.warning_found_michaels.None.singular", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_customers", "column_name": null, "test_name": "warning_found_michaels", "test_display_name": "Warning Found Michaels", "original_path": "tests/warning_found_michaels.sql", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "warn", "model_unique_id": "model.jaffle_shop.stg_customers", "table_unique_id": "hive_metastore.dbt_demo.stg_customers", "test_type": "dbt_test", "test_sub_type": "singular", "test_query": "-- alert a test warning when we see Michaels\n\n \n\nselect \n* \nfrom `hive_metastore`.`dbt_demo`.`stg_customers`\nwhere first_name = 'Michael'", "test_params": {}, "test_created_at": null, "description": null, "result": {"result_description": "Got 2 results, configured to warn if != 0", "result_query": "-- alert a test warning when we see Michaels\n\n \n\nselect \n* \nfrom `hive_metastore`.`dbt_demo`.`stg_customers`\nwhere first_name = 'Michael'"}, "configuration": {"test_name": "warning_found_michaels", "test_params": {}}, "test_tags": [], "normalized_full_path": "jaffle_shop/tests/warning_found_michaels.sql"}, "test_results": {"display_name": "warning_found_michaels", "results_sample": [], "error_message": "Got 2 results, configured to warn if != 0", "failed_rows_count": 2}}], "model.jaffle_shop.stg_payments": [{"metadata": {"test_unique_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278", "elementary_unique_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278.payment_method.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_payments", "column_name": "payment_method", "test_name": "accepted_values", "test_display_name": "Accepted Values", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_payments", "table_unique_id": "hive_metastore.dbt_demo.stg_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from `hive_metastore`.`dbt_demo`.`stg_payments`\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'credit_card','coupon','bank_transfer','gift_card'\n)", "test_params": {"values": ["credit_card", "coupon", "bank_transfer", "gift_card"], "column_name": "payment_method", "model": "{{ get_where_subquery(ref('stg_payments')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from `hive_metastore`.`dbt_demo`.`stg_payments`\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'credit_card','coupon','bank_transfer','gift_card'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["credit_card", "coupon", "bank_transfer", "gift_card"], "column_name": "payment_method", "model": "{{ get_where_subquery(ref('stg_payments')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_results": {"display_name": "accepted_values", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075", "elementary_unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075.payment_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_payments", "column_name": "payment_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_payments", "table_unique_id": "hive_metastore.dbt_demo.stg_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select payment_id\nfrom `hive_metastore`.`dbt_demo`.`stg_payments`\nwhere payment_id is null", "test_params": {"column_name": "payment_id", "model": "{{ get_where_subquery(ref('stg_payments')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select payment_id\nfrom `hive_metastore`.`dbt_demo`.`stg_payments`\nwhere payment_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "payment_id", "model": "{{ get_where_subquery(ref('stg_payments')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.jaffle_shop.unique_stg_payments_payment_id.3744510712", "elementary_unique_id": "test.jaffle_shop.unique_stg_payments_payment_id.3744510712.payment_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_payments", "column_name": "payment_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "model.jaffle_shop.stg_payments", "table_unique_id": "hive_metastore.dbt_demo.stg_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        payment_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`stg_payments`\n    where payment_id is not null\n    group by payment_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT payment_id)  WITHIN GROUP (ORDER BY payment_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0", "test_params": {"column_name": "payment_id", "model": "{{ get_where_subquery(ref('stg_payments')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test unique_stg_payments_payment_id (models/staging/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/staging/schema.yml/unique_stg_payments_payment_id.sql", "result_query": "with validation_errors as (\n    select\n        payment_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`stg_payments`\n    where payment_id is not null\n    group by payment_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT payment_id)  WITHIN GROUP (ORDER BY payment_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "payment_id", "model": "{{ get_where_subquery(ref('stg_payments')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": "Database Error in test unique_stg_payments_payment_id (models/staging/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/staging/schema.yml/unique_stg_payments_payment_id.sql", "failed_rows_count": 42000}}]}, "test_results_totals": {"source.jaffle_shop.dbt_demo.raw_customers": {"errors": 1, "warnings": 0, "passed": 1, "failures": 0}, "model.jaffle_shop.customers": {"errors": 1, "warnings": 0, "passed": 1, "failures": 0}, "source.jaffle_shop.dbt_demo.raw_orders": {"errors": 1, "warnings": 0, "passed": 1, "failures": 0}, "test.jaffle_shop.warning_found_michaels": {"errors": 0, "warnings": 1, "passed": 0, "failures": 0}, "model.jaffle_shop.orders": {"errors": 1, "warnings": 0, "passed": 9, "failures": 0}, "model.jaffle_shop.stg_orders": {"errors": 1, "warnings": 0, "passed": 2, "failures": 0}, "model.jaffle_shop.stg_customers": {"errors": 1, "warnings": 1, "passed": 1, "failures": 0}, "model.jaffle_shop.stg_payments": {"errors": 1, "warnings": 0, "passed": 2, "failures": 0}}, "test_runs": {"source.jaffle_shop.dbt_demo.raw_customers": [{"metadata": {"test_unique_id": "test.jaffle_shop.source_not_null_dbt_demo_raw_customers_id.221e98cf02", "elementary_unique_id": "test.jaffle_shop.source_not_null_dbt_demo_raw_customers_id.221e98cf02.id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "raw_customers", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/raw/src_jaffle_shop.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "source.jaffle_shop.dbt_demo.raw_customers", "table_unique_id": "hive_metastore.dbt_demo.raw_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom `hive_metastore`.`dbt_demo`.`raw_customers`\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom `hive_metastore`.`dbt_demo`.`raw_customers`\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_customers')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/raw/src_jaffle_shop.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, no errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.source_unique_dbt_demo_raw_customers_id.930627b974", "elementary_unique_id": "test.jaffle_shop.source_unique_dbt_demo_raw_customers_id.930627b974.id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "raw_customers", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/raw/src_jaffle_shop.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "source.jaffle_shop.dbt_demo.raw_customers", "table_unique_id": "hive_metastore.dbt_demo.raw_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`raw_customers`\n    where id is not null\n    group by id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT id)  WITHIN GROUP (ORDER BY id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test source_unique_dbt_demo_raw_customers_id (models/raw/src_jaffle_shop.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/raw/src_jaffle_shop.yml/source_unique_dbt_demo_raw_customers_id.sql", "result_query": "with validation_errors as (\n    select\n        id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`raw_customers`\n    where id is not null\n    group by id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT id)  WITHIN GROUP (ORDER BY id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_customers')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/raw/src_jaffle_shop.yml"}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 3, "warnings": 0, "passed": 0, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "error", "execution_time": null}], "description": "There were no failures, 3 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}], "model.jaffle_shop.customers": [{"metadata": {"test_unique_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d", "elementary_unique_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d.customer_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "customers", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.customers", "table_unique_id": "hive_metastore.dbt_demo.customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom `hive_metastore`.`dbt_demo`.`customers`\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom `hive_metastore`.`dbt_demo`.`customers`\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('customers')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1", "elementary_unique_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1.customer_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "customers", "column_name": "customer_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "model.jaffle_shop.customers", "table_unique_id": "hive_metastore.dbt_demo.customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        customer_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`customers`\n    where customer_id is not null\n    group by customer_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT customer_id)  WITHIN GROUP (ORDER BY customer_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test unique_customers_customer_id (models/mart/core/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/mart/core/schema.yml/unique_customers_customer_id.sql", "result_query": "with validation_errors as (\n    select\n        customer_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`customers`\n    where customer_id is not null\n    group by customer_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT customer_id)  WITHIN GROUP (ORDER BY customer_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('customers')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 3, "warnings": 0, "passed": 0, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "error", "execution_time": null}], "description": "There were no failures, 3 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}], "source.jaffle_shop.dbt_demo.raw_orders": [{"metadata": {"test_unique_id": "test.jaffle_shop.source_not_null_dbt_demo_raw_orders_id.6d913e721c", "elementary_unique_id": "test.jaffle_shop.source_not_null_dbt_demo_raw_orders_id.6d913e721c.id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "raw_orders", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/raw/src_jaffle_shop.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "source.jaffle_shop.dbt_demo.raw_orders", "table_unique_id": "hive_metastore.dbt_demo.raw_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom `hive_metastore`.`dbt_demo`.`raw_orders`\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select id\nfrom `hive_metastore`.`dbt_demo`.`raw_orders`\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/raw/src_jaffle_shop.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 3, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, no errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.source_unique_dbt_demo_raw_orders_id.e2b712e628", "elementary_unique_id": "test.jaffle_shop.source_unique_dbt_demo_raw_orders_id.e2b712e628.id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "raw_orders", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/raw/src_jaffle_shop.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "source.jaffle_shop.dbt_demo.raw_orders", "table_unique_id": "hive_metastore.dbt_demo.raw_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`raw_orders`\n    where id is not null\n    group by id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT id)  WITHIN GROUP (ORDER BY id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test source_unique_dbt_demo_raw_orders_id (models/raw/src_jaffle_shop.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/raw/src_jaffle_shop.yml/source_unique_dbt_demo_raw_orders_id.sql", "result_query": "with validation_errors as (\n    select\n        id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`raw_orders`\n    where id is not null\n    group by id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT id)  WITHIN GROUP (ORDER BY id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(source('dbt_demo', 'raw_orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/raw/src_jaffle_shop.yml"}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 3, "warnings": 0, "passed": 0, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "error", "execution_time": null}], "description": "There were no failures, 3 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}], "test.jaffle_shop.warning_found_michaels": [{"metadata": {"test_unique_id": "test.jaffle_shop.warning_found_michaels", "elementary_unique_id": "test.jaffle_shop.warning_found_michaels.None.singular", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_customers", "column_name": null, "test_name": "warning_found_michaels", "test_display_name": "Warning Found Michaels", "original_path": "tests/warning_found_michaels.sql", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "warn", "model_unique_id": "model.jaffle_shop.stg_customers", "table_unique_id": "hive_metastore.dbt_demo.stg_customers", "test_type": "dbt_test", "test_sub_type": "singular", "test_query": "-- alert a test warning when we see Michaels\n\n \n\nselect \n* \nfrom `hive_metastore`.`dbt_demo`.`stg_customers`\nwhere first_name = 'Michael'", "test_params": {}, "test_created_at": null, "description": null, "result": {"result_description": "Got 2 results, configured to warn if != 0", "result_query": "-- alert a test warning when we see Michaels\n\n \n\nselect \n* \nfrom `hive_metastore`.`dbt_demo`.`stg_customers`\nwhere first_name = 'Michael'"}, "configuration": {"test_name": "warning_found_michaels", "test_params": {}}, "test_tags": [], "normalized_full_path": "jaffle_shop/tests/warning_found_michaels.sql"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 1, "passed": 0, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": 2, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "warn", "execution_time": null}], "description": "There were no failures, 2 errors and 1 warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}], "model.jaffle_shop.orders": [{"metadata": {"test_unique_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3", "elementary_unique_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3.status.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "status", "test_name": "accepted_values", "test_display_name": "Accepted Values", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `hive_metastore`.`dbt_demo`.`orders`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned'\n)", "test_params": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `hive_metastore`.`dbt_demo`.`orders`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_amount.106140f9fd", "elementary_unique_id": "test.jaffle_shop.not_null_orders_amount.106140f9fd.amount.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "amount", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere amount is null", "test_params": {"column_name": "amount", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "amount", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49", "elementary_unique_id": "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49.bank_transfer_amount.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "bank_transfer_amount", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select bank_transfer_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere bank_transfer_amount is null", "test_params": {"column_name": "bank_transfer_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select bank_transfer_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere bank_transfer_amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "bank_transfer_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625", "elementary_unique_id": "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625.coupon_amount.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "coupon_amount", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select coupon_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere coupon_amount is null", "test_params": {"column_name": "coupon_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select coupon_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere coupon_amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "coupon_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59", "elementary_unique_id": "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59.credit_card_amount.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "credit_card_amount", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select credit_card_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere credit_card_amount is null", "test_params": {"column_name": "credit_card_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select credit_card_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere credit_card_amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "credit_card_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_customer_id.c5f02694af", "elementary_unique_id": "test.jaffle_shop.not_null_orders_customer_id.c5f02694af.customer_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a", "elementary_unique_id": "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a.gift_card_amount.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "gift_card_amount", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select gift_card_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere gift_card_amount is null", "test_params": {"column_name": "gift_card_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select gift_card_amount\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere gift_card_amount is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "gift_card_amount", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_orders_order_id.cf6c17daed", "elementary_unique_id": "test.jaffle_shop.not_null_orders_order_id.cf6c17daed.order_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "order_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select order_id\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere order_id is null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select order_id\nfrom `hive_metastore`.`dbt_demo`.`orders`\nwhere order_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2", "elementary_unique_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2.customer_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "customer_id", "test_name": "relationships", "test_display_name": "Relationships", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with child as (\n    select customer_id as from_field\n    from `hive_metastore`.`dbt_demo`.`orders`\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from `hive_metastore`.`dbt_demo`.`customers`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null", "test_params": {"to": "ref('customers')", "field": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that all of the records in a child table have a corresponding record in a parent table. This property is referred to as \"referential integrity\".", "result": {"result_description": null, "result_query": "with child as (\n    select customer_id as from_field\n    from `hive_metastore`.`dbt_demo`.`orders`\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from `hive_metastore`.`dbt_demo`.`customers`\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null"}, "configuration": {"test_name": "relationships", "test_params": {"to": "ref('customers')", "field": "customer_id", "column_name": "customer_id", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.unique_orders_order_id__10.aee5446173", "elementary_unique_id": "test.jaffle_shop.unique_orders_order_id__10.aee5446173.order_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "orders", "column_name": "order_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/mart/core/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "model.jaffle_shop.orders", "table_unique_id": "hive_metastore.dbt_demo.orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        order_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`orders`\n    where order_id is not null\n    group by order_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT order_id)  WITHIN GROUP (ORDER BY order_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 10", "test_params": {"error_threshold": 10, "column_name": "order_id", "model": "{{ get_where_subquery(ref('orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test unique_orders_order_id__10 (models/mart/core/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/mart/core/schema.yml/unique_orders_order_id__10.sql", "result_query": "with validation_errors as (\n    select\n        order_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`orders`\n    where order_id is not null\n    group by order_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT order_id)  WITHIN GROUP (ORDER BY order_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 10"}, "configuration": {"test_name": "unique", "test_params": {"error_threshold": 10, "column_name": "order_id", "model": "{{ get_where_subquery(ref('orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/mart/core/schema.yml"}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 3, "warnings": 0, "passed": 0, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "error", "execution_time": null}], "description": "There were no failures, 3 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}], "model.jaffle_shop.stg_orders": [{"metadata": {"test_unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned__return_rejected.6d0cca5204", "elementary_unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned__return_rejected.6d0cca5204.status.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_orders", "column_name": "status", "test_name": "accepted_values", "test_display_name": "Accepted Values", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "hive_metastore.dbt_demo.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `hive_metastore`.`dbt_demo`.`stg_orders`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned','return_rejected'\n)", "test_params": {"values": ["placed", "shipped", "completed", "return_pending", "returned", "return_rejected"], "column_name": "status", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from `hive_metastore`.`dbt_demo`.`stg_orders`\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'placed','shipped','completed','return_pending','returned','return_rejected'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["placed", "shipped", "completed", "return_pending", "returned", "return_rejected"], "column_name": "status", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64", "elementary_unique_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64.order_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_orders", "column_name": "order_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "hive_metastore.dbt_demo.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select order_id\nfrom `hive_metastore`.`dbt_demo`.`stg_orders`\nwhere order_id is null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select order_id\nfrom `hive_metastore`.`dbt_demo`.`stg_orders`\nwhere order_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a", "elementary_unique_id": "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a.order_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_orders", "column_name": "order_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "model.jaffle_shop.stg_orders", "table_unique_id": "hive_metastore.dbt_demo.stg_orders", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        order_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`stg_orders`\n    where order_id is not null\n    group by order_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT order_id)  WITHIN GROUP (ORDER BY order_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test unique_stg_orders_order_id (models/staging/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/staging/schema.yml/unique_stg_orders_order_id.sql", "result_query": "with validation_errors as (\n    select\n        order_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`stg_orders`\n    where order_id is not null\n    group by order_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT order_id)  WITHIN GROUP (ORDER BY order_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "order_id", "model": "{{ get_where_subquery(ref('stg_orders')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 3, "warnings": 0, "passed": 0, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "error", "execution_time": null}], "description": "There were no failures, 3 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}], "model.jaffle_shop.stg_customers": [{"metadata": {"test_unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa", "elementary_unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa.customer_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_customers", "column_name": "customer_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_customers", "table_unique_id": "hive_metastore.dbt_demo.stg_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select customer_id\nfrom `hive_metastore`.`dbt_demo`.`stg_customers`\nwhere customer_id is null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select customer_id\nfrom `hive_metastore`.`dbt_demo`.`stg_customers`\nwhere customer_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customers')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada", "elementary_unique_id": "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada.customer_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_customers", "column_name": "customer_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "model.jaffle_shop.stg_customers", "table_unique_id": "hive_metastore.dbt_demo.stg_customers", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        customer_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`stg_customers`\n    where customer_id is not null\n    group by customer_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT customer_id)  WITHIN GROUP (ORDER BY customer_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customers')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test unique_stg_customers_customer_id (models/staging/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/staging/schema.yml/unique_stg_customers_customer_id.sql", "result_query": "with validation_errors as (\n    select\n        customer_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`stg_customers`\n    where customer_id is not null\n    group by customer_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT customer_id)  WITHIN GROUP (ORDER BY customer_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "customer_id", "model": "{{ get_where_subquery(ref('stg_customers')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 3, "warnings": 0, "passed": 0, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "error", "execution_time": null}], "description": "There were no failures, 3 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.warning_found_michaels", "elementary_unique_id": "test.jaffle_shop.warning_found_michaels.None.singular", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_customers", "column_name": null, "test_name": "warning_found_michaels", "test_display_name": "Warning Found Michaels", "original_path": "tests/warning_found_michaels.sql", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "warn", "model_unique_id": "model.jaffle_shop.stg_customers", "table_unique_id": "hive_metastore.dbt_demo.stg_customers", "test_type": "dbt_test", "test_sub_type": "singular", "test_query": "-- alert a test warning when we see Michaels\n\n \n\nselect \n* \nfrom `hive_metastore`.`dbt_demo`.`stg_customers`\nwhere first_name = 'Michael'", "test_params": {}, "test_created_at": null, "description": null, "result": {"result_description": "Got 2 results, configured to warn if != 0", "result_query": "-- alert a test warning when we see Michaels\n\n \n\nselect \n* \nfrom `hive_metastore`.`dbt_demo`.`stg_customers`\nwhere first_name = 'Michael'"}, "configuration": {"test_name": "warning_found_michaels", "test_params": {}}, "test_tags": [], "normalized_full_path": "jaffle_shop/tests/warning_found_michaels.sql"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 1, "passed": 0, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": 2, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "warn", "execution_time": null}], "description": "There were no failures, 2 errors and 1 warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}], "model.jaffle_shop.stg_payments": [{"metadata": {"test_unique_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278", "elementary_unique_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278.payment_method.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_payments", "column_name": "payment_method", "test_name": "accepted_values", "test_display_name": "Accepted Values", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_payments", "table_unique_id": "hive_metastore.dbt_demo.stg_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from `hive_metastore`.`dbt_demo`.`stg_payments`\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'credit_card','coupon','bank_transfer','gift_card'\n)", "test_params": {"values": ["credit_card", "coupon", "bank_transfer", "gift_card"], "column_name": "payment_method", "model": "{{ get_where_subquery(ref('stg_payments')) }}"}, "test_created_at": null, "description": "This test validates that all of the values in a column are present in a supplied list of `values`. If any values other than those provided in the list are present, then the test will fail.", "result": {"result_description": null, "result_query": "with all_values as (\n\n    select\n        payment_method as value_field,\n        count(*) as n_records\n\n    from `hive_metastore`.`dbt_demo`.`stg_payments`\n    group by payment_method\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'credit_card','coupon','bank_transfer','gift_card'\n)"}, "configuration": {"test_name": "accepted_values", "test_params": {"values": ["credit_card", "coupon", "bank_transfer", "gift_card"], "column_name": "payment_method", "model": "{{ get_where_subquery(ref('stg_payments')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075", "elementary_unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075.payment_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_payments", "column_name": "payment_id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "pass", "model_unique_id": "model.jaffle_shop.stg_payments", "table_unique_id": "hive_metastore.dbt_demo.stg_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select payment_id\nfrom `hive_metastore`.`dbt_demo`.`stg_payments`\nwhere payment_id is null", "test_params": {"column_name": "payment_id", "model": "{{ get_where_subquery(ref('stg_payments')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select payment_id\nfrom `hive_metastore`.`dbt_demo`.`stg_payments`\nwhere payment_id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "payment_id", "model": "{{ get_where_subquery(ref('stg_payments')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "pass", "execution_time": null}], "description": "There were no failures, 2 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.jaffle_shop.unique_stg_payments_payment_id.3744510712", "elementary_unique_id": "test.jaffle_shop.unique_stg_payments_payment_id.3744510712.payment_id.generic", "database_name": "hive_metastore", "schema_name": "dbt_demo", "table_name": "stg_payments", "column_name": "payment_id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models/staging/schema.yml", "latest_run_time": "2024-11-12T12:42:15+11:00", "latest_run_time_utc": "2024-11-12T01:42:15+00:00", "latest_run_status": "error", "model_unique_id": "model.jaffle_shop.stg_payments", "table_unique_id": "hive_metastore.dbt_demo.stg_payments", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation_errors as (\n    select\n        payment_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`stg_payments`\n    where payment_id is not null\n    group by payment_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT payment_id)  WITHIN GROUP (ORDER BY payment_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0", "test_params": {"column_name": "payment_id", "model": "{{ get_where_subquery(ref('stg_payments')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": "Database Error in test unique_stg_payments_payment_id (models/staging/schema.yml)\n  [INVALID_SQL_SYNTAX.FUNCTION_WITH_UNSUPPORTED_SYNTAX] Invalid SQL syntax: The function `collect_list` does not support WITHIN GROUP (ORDER BY ...). SQLSTATE: 42000; line 23 pos 8\n  compiled code at target/run/jaffle_shop/models/staging/schema.yml/unique_stg_payments_payment_id.sql", "result_query": "with validation_errors as (\n    select\n        payment_id\n        ,count(*) as occurence\n    from `hive_metastore`.`dbt_demo`.`stg_payments`\n    where payment_id is not null\n    group by payment_id\n    having occurence > 1\n)\n\n,error_records AS\n(\n  SELECT \n        ARRAY_AGG(DISTINCT payment_id)  WITHIN GROUP (ORDER BY payment_id DESC) AS err_array\n  FROM validation_errors\n)\n\nSELECT \nerr_array\nFROM error_records\nWHERE ARRAY_SIZE(err_array) > 0"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "payment_id", "model": "{{ get_where_subquery(ref('stg_payments')) }}"}}, "test_tags": [], "normalized_full_path": "jaffle_shop/models/staging/schema.yml"}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 3, "warnings": 0, "passed": 0, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-11-12T01:38:54+00:00", "id": "fbfa78cd-439f-461f-be55-0bfc29cfbb8b", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:39:55+00:00", "id": "7e25f32f-c307-4b9e-8032-e1d366f3fd0d", "status": "error", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-11-12T01:42:15+00:00", "id": "87db6e5f-59ed-4bad-a9d5-2c784b2b6ccb", "status": "error", "execution_time": null}], "description": "There were no failures, 3 errors and no warnings on the last 3 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}]}, "test_runs_totals": {"source.jaffle_shop.dbt_demo.raw_customers": {"errors": 3, "warnings": 0, "passed": 3, "failures": 0}, "model.jaffle_shop.customers": {"errors": 5, "warnings": 0, "passed": 1, "failures": 0}, "source.jaffle_shop.dbt_demo.raw_orders": {"errors": 3, "warnings": 0, "passed": 3, "failures": 0}, "test.jaffle_shop.warning_found_michaels": {"errors": 2, "warnings": 1, "passed": 0, "failures": 0}, "model.jaffle_shop.orders": {"errors": 21, "warnings": 0, "passed": 9, "failures": 0}, "model.jaffle_shop.stg_orders": {"errors": 7, "warnings": 0, "passed": 2, "failures": 0}, "model.jaffle_shop.stg_customers": {"errors": 7, "warnings": 1, "passed": 1, "failures": 0}, "model.jaffle_shop.stg_payments": {"errors": 7, "warnings": 0, "passed": 2, "failures": 0}}, "coverages": {"model.jaffle_shop.orders": {"table_tests": 0, "column_tests": 10}, "model.jaffle_shop.stg_payments": {"table_tests": 0, "column_tests": 3}, "model.jaffle_shop.stg_customers": {"table_tests": 1, "column_tests": 2}, "model.jaffle_shop.stg_orders": {"table_tests": 0, "column_tests": 3}, "model.jaffle_shop.customers": {"table_tests": 0, "column_tests": 2}, "source.jaffle_shop.dbt_demo.raw_customers": {"table_tests": 0, "column_tests": 2}, "source.jaffle_shop.dbt_demo.raw_orders": {"table_tests": 0, "column_tests": 2}}, "model_runs": [{"unique_id": "model.jaffle_shop.customers", "schema": "dbt_demo", "name": "customers", "status": "success", "last_exec_time": 2.3, "median_exec_time": 2.3, "compiled_code": "with customers as (\n\n    select * from `hive_metastore`.`dbt_demo`.`stg_customers`\n\n),\n\norders as (\n\n    select * from `hive_metastore`.`dbt_demo`.`stg_orders`\n\n),\n\npayments as (\n\n    select * from `hive_metastore`.`dbt_demo`.`stg_payments`\n\n),\n\ncustomer_orders as (\n\n        select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by customer_id\n\n),\n\ncustomer_payments as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders on\n         payments.order_id = orders.order_id\n\n    group by orders.customer_id\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.customer_hash,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders\n        on customers.customer_id = customer_orders.customer_id\n\n    left join customer_payments\n        on  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final", "last_generated_at": "2024-11-12T01:41:33+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "3b47f961-9a7d-4a69-9315-f45bd1e652d9", "time_utc": "2024-11-12T01:00:42+00:00", "status": "skipped", "full_refresh": false, "materialization": "table", "execution_time": 0.0}, {"id": "cf441ddf-aade-4898-9425-a599049c0505", "time_utc": "2024-11-12T01:31:48+00:00", "status": "skipped", "full_refresh": false, "materialization": "table", "execution_time": 0.0}, {"id": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "time_utc": "2024-11-12T01:41:33+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 2.3}]}, {"unique_id": "model.jaffle_shop.orders", "schema": "dbt_demo", "name": "orders", "status": "success", "last_exec_time": 1.8, "median_exec_time": 1.8, "compiled_code": "\n\nwith orders as (\n\n    select * from `hive_metastore`.`dbt_demo`.`stg_orders`\n\n),\n\npayments as (\n\n    select * from `hive_metastore`.`dbt_demo`.`stg_payments`\n\n),\n\norder_payments as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by order_id\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n\n    left join order_payments\n        on orders.order_id = order_payments.order_id\n\n)\n\nselect * from final", "last_generated_at": "2024-11-12T01:41:33+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "3b47f961-9a7d-4a69-9315-f45bd1e652d9", "time_utc": "2024-11-12T01:00:42+00:00", "status": "skipped", "full_refresh": false, "materialization": "table", "execution_time": 0.0}, {"id": "cf441ddf-aade-4898-9425-a599049c0505", "time_utc": "2024-11-12T01:31:48+00:00", "status": "skipped", "full_refresh": false, "materialization": "table", "execution_time": 0.0}, {"id": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "time_utc": "2024-11-12T01:41:33+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.8}]}, {"unique_id": "model.jaffle_shop.stg_customers", "schema": "dbt_demo", "name": "stg_customers", "status": "success", "last_exec_time": 0.5, "median_exec_time": 0.5, "compiled_code": "with source as (\n\n    select * from `hive_metastore`.`dbt_demo`.`raw_customers`\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name,\n        md5(concat(first_name, last_name, 'jaffleshop')) AS customer_hash\n\n    from source\n\n)\n\nselect * from renamed", "last_generated_at": "2024-11-12T01:41:33+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 2, "success": 1}, "runs": [{"id": "3b47f961-9a7d-4a69-9315-f45bd1e652d9", "time_utc": "2024-11-12T01:00:42+00:00", "status": "error", "full_refresh": false, "materialization": "view", "execution_time": 0.0}, {"id": "cf441ddf-aade-4898-9425-a599049c0505", "time_utc": "2024-11-12T01:31:48+00:00", "status": "error", "full_refresh": false, "materialization": "view", "execution_time": 0.0}, {"id": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "time_utc": "2024-11-12T01:41:33+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 0.5}]}, {"unique_id": "model.jaffle_shop.stg_orders", "schema": "dbt_demo", "name": "stg_orders", "status": "success", "last_exec_time": 0.5, "median_exec_time": 0.5, "compiled_code": "with source as (\n\n    select * from `hive_metastore`.`dbt_demo`.`raw_orders`\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "last_generated_at": "2024-11-12T01:41:33+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 2, "success": 1}, "runs": [{"id": "3b47f961-9a7d-4a69-9315-f45bd1e652d9", "time_utc": "2024-11-12T01:00:42+00:00", "status": "error", "full_refresh": false, "materialization": "view", "execution_time": 0.0}, {"id": "cf441ddf-aade-4898-9425-a599049c0505", "time_utc": "2024-11-12T01:31:48+00:00", "status": "error", "full_refresh": false, "materialization": "view", "execution_time": 0.0}, {"id": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "time_utc": "2024-11-12T01:41:33+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 0.5}]}, {"unique_id": "model.jaffle_shop.stg_payments", "schema": "dbt_demo", "name": "stg_payments", "status": "success", "last_exec_time": 0.5, "median_exec_time": 0.5, "compiled_code": "with source as (\n     \n    select * from `hive_metastore`.`dbt_demo`.`raw_payments`\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        -- `amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "last_generated_at": "2024-11-12T01:41:33+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 2, "success": 1}, "runs": [{"id": "3b47f961-9a7d-4a69-9315-f45bd1e652d9", "time_utc": "2024-11-12T01:00:42+00:00", "status": "error", "full_refresh": false, "materialization": "view", "execution_time": 0.0}, {"id": "cf441ddf-aade-4898-9425-a599049c0505", "time_utc": "2024-11-12T01:31:48+00:00", "status": "error", "full_refresh": false, "materialization": "view", "execution_time": 0.0}, {"id": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "time_utc": "2024-11-12T01:41:33+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 0.5}]}], "model_runs_totals": {"model.jaffle_shop.customers": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.jaffle_shop.orders": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.jaffle_shop.stg_customers": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "model.jaffle_shop.stg_orders": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}, "model.jaffle_shop.stg_payments": {"errors": 2, "warnings": 0, "passed": 1, "failures": 0}}, "filters": {"test_results": [{"name": "warnings", "display_name": "Warnings", "model_unique_ids": ["test.jaffle_shop.warning_found_michaels", "model.jaffle_shop.stg_customers"]}, {"name": "errors", "display_name": "Errors", "model_unique_ids": ["source.jaffle_shop.dbt_demo.raw_customers", "model.jaffle_shop.customers", "model.jaffle_shop.stg_payments", "source.jaffle_shop.dbt_demo.raw_orders", "model.jaffle_shop.orders", "model.jaffle_shop.stg_customers", "model.jaffle_shop.stg_orders"]}, {"name": "passed", "display_name": "Passed", "model_unique_ids": ["source.jaffle_shop.dbt_demo.raw_customers", "model.jaffle_shop.customers", "model.jaffle_shop.stg_payments", "source.jaffle_shop.dbt_demo.raw_orders", "model.jaffle_shop.orders", "model.jaffle_shop.stg_customers", "model.jaffle_shop.stg_orders"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["source.jaffle_shop.dbt_demo.raw_payments"]}], "test_runs": [{"name": "warnings", "display_name": "Warnings", "model_unique_ids": ["test.jaffle_shop.warning_found_michaels", "model.jaffle_shop.stg_customers"]}, {"name": "errors", "display_name": "Errors", "model_unique_ids": ["source.jaffle_shop.dbt_demo.raw_customers", "model.jaffle_shop.customers", "model.jaffle_shop.stg_payments", "source.jaffle_shop.dbt_demo.raw_orders", "test.jaffle_shop.warning_found_michaels", "model.jaffle_shop.orders", "model.jaffle_shop.stg_customers", "model.jaffle_shop.stg_orders"]}, {"name": "passed", "display_name": "Passed", "model_unique_ids": ["source.jaffle_shop.dbt_demo.raw_customers", "model.jaffle_shop.customers", "model.jaffle_shop.stg_payments", "source.jaffle_shop.dbt_demo.raw_orders", "model.jaffle_shop.orders", "model.jaffle_shop.stg_customers", "model.jaffle_shop.stg_orders"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["source.jaffle_shop.dbt_demo.raw_payments"]}], "model_runs": [{"name": "success", "display_name": "Successful Runs", "model_unique_ids": ["model.jaffle_shop.customers", "model.jaffle_shop.orders", "model.jaffle_shop.stg_orders", "model.jaffle_shop.stg_customers", "model.jaffle_shop.stg_payments"]}, {"name": "errors", "display_name": "Failed Runs", "model_unique_ids": ["model.jaffle_shop.stg_customers", "model.jaffle_shop.stg_orders", "model.jaffle_shop.stg_payments"]}]}, "lineage": {"nodes": [{"id": "model.jaffle_shop.customers", "type": "model", "sub_type": "table"}, {"id": "model.jaffle_shop.orders", "type": "model", "sub_type": "table"}, {"id": "model.jaffle_shop.stg_customers", "type": "model", "sub_type": "view"}, {"id": "model.jaffle_shop.stg_orders", "type": "model", "sub_type": "view"}, {"id": "model.jaffle_shop.stg_payments", "type": "model", "sub_type": "view"}, {"id": "source.jaffle_shop.dbt_demo.raw_customers", "type": "source", "sub_type": null}, {"id": "source.jaffle_shop.dbt_demo.raw_orders", "type": "source", "sub_type": null}, {"id": "source.jaffle_shop.dbt_demo.raw_payments", "type": "source", "sub_type": null}], "edges": [["model.jaffle_shop.customers", "model.jaffle_shop.stg_customers"], ["model.jaffle_shop.customers", "model.jaffle_shop.stg_orders"], ["model.jaffle_shop.customers", "model.jaffle_shop.stg_payments"], ["model.jaffle_shop.stg_customers", "source.jaffle_shop.dbt_demo.raw_customers"], ["model.jaffle_shop.stg_orders", "source.jaffle_shop.dbt_demo.raw_orders"], ["model.jaffle_shop.stg_payments", "source.jaffle_shop.dbt_demo.raw_payments"], ["model.jaffle_shop.orders", "model.jaffle_shop.stg_orders"], ["model.jaffle_shop.orders", "model.jaffle_shop.stg_payments"]]}, "invocations": [{"invocation_id": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "detected_at": null, "command": "run", "selected": "", "full_refresh": false, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}], "resources_latest_invocation": {"model.elementary.alerts_anomaly_detection": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.alerts_dbt_models": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.alerts_dbt_source_freshness": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.alerts_dbt_tests": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.alerts_schema_changes": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.anomaly_threshold_sensitivity": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.data_monitoring_metrics": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.dbt_artifacts_hashes": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.dbt_columns": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.dbt_exposures": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.dbt_invocations": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.dbt_metrics": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.dbt_models": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.dbt_run_results": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.dbt_seeds": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.dbt_snapshots": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.dbt_source_freshness_results": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.dbt_sources": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.dbt_tests": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.elementary_test_results": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.job_run_results": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.metadata": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.metrics_anomaly_score": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.model_run_results": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.monitors_runs": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.schema_columns_snapshot": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.snapshot_run_results": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.elementary.test_result_rows": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.jaffle_shop.customers": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.jaffle_shop.orders": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.jaffle_shop.stg_customers": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.jaffle_shop.stg_orders": "f664a891-4cab-493c-b3c6-f81dc455b7fc", "model.jaffle_shop.stg_payments": "f664a891-4cab-493c-b3c6-f81dc455b7fc"}, "invocations_job_identification": {}, "env": {"project_name": "jaffle_shop", "env": "dev", "warehouse_type": "databricks"}, "tracking": {"posthog_api_key": "phc_56XBEzZmh02mGkadqLiYW51eECyYKWPyecVwkGdGUfg", "report_generator_anonymous_user_id": "02e1cc84-5904-4cc2-93e9-56c192b4f0d1", "anonymous_warehouse_id": "d50f9b5dddd7befbfcb2f8cd0c9086a8687a7e772859ce60d97e9c81688f92b2"}}